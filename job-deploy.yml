parameters:
  - name: kubeCon
    type: string

  - name: namespace
    type: string

  - name: releaseName
    type: string

  - name: 'pool'
    type: object
    default: {}
    
  - name: deploymentEnvironment
    type: string

  - name: overrideValues
    type: string
    default: ''

  - name: valueFile
    type: string
    default: ''

  - name: preDeploy
    type: stepList
    default: []

  - name: dependsOn
    type: string
    default: ''

  - name: checkoutFolder
    type: string
    default: ''

jobs:
  - deployment: deploy
    displayName: Deploy
    ${{ if ne(parameters.dependsOn, '') }}:
      dependsOn: ${{ parameters.dependsOn }}
    pool: ${{ parameters.pool }}
    environment: ${{ parameters.deploymentEnvironment }}
    strategy:
      runOnce:
        deploy:
          steps:
            - checkout: self
              displayName: Download source
              ${{ if ne(parameters.checkoutFolder, '') }}:
                path: s/${{ parameters.checkoutFolder }}

            - ${{ parameters.preDeploy }}

            - script: echo "##vso[task.setvariable variable=tag]$(tag)$(git describe --tags --long | sed '0,/-/s/-/./')"
              displayName: Append tag with git describe

            - script: echo Tag $(tag)
              displayName: Tag

            - task: HelmDeploy@0
              displayName: Helm upgrade
              inputs:
                connectionType: 'Kubernetes Service Connection'
                kubernetesServiceConnection: ${{ parameters.kubeCon }}
                namespace: ${{ parameters.namespace }}
                command: upgrade
                chartType: filepath
                ${{ if ne(parameters.checkoutFolder, '') }}:
                  chartPath: ${{ parameters.checkoutFolder }}/chart
                ${{ if eq(parameters.checkoutFolder, '') }}:
                  chartPath: ./chart
                releaseName: ${{ parameters.releaseName }}
                ${{ if ne(parameters.overrideValues, '') }}:
                  overrideValues: ${{ parameters.overrideValues }}
                ${{ if ne(parameters.valueFile, '') }}:
                  valueFile: ${{ parameters.valueFile }}
                install: true
                waitForExecution: true
                failOnStderr: false
        on:
          failure:
            pool: ${{ parameters.pool }}
            steps:
              - task: HelmDeploy@0
                displayName: Helm rollback
                inputs:
                  connectionType: 'Kubernetes Service Connection'
                  kubernetesServiceConnection: ${{ parameters.kubeCon }}
                  namespace: ${{ parameters.namespace }}
                  command: rollback
                  arguments: ${{ parameters.releaseName }}
                  waitForExecution: true
